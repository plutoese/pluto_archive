# coding=UTF-8

# -----------------------------------------------------------------------------------------
# @author: plutoese
# @date: 2015.10.10
# @class: report
# @introduction: 类CrossSectionDataExplorer用来对横截面数据进行数据处理和探索性分析
# @property:
# @method:
# -----------------------------------------------------------------------------------------

import re
from library.report.class_report import Report
from application.DataWarehouse.data.class_regiondata import RegionData
from application.DataWarehouse.toolkit.class_crosssectiondataexplorer import CrossSectionRegionDataExplorer

# 0.设置初始值
vars = ['年末总人口', '年平均人口', '自然增长率', '小学数', '年末单位从业人数', '城镇私营和个体从业人员', '年末城镇登记失业人员数',
        '第一产业年末单位从业人员', '第二产业年末单位从业人员', '第三产业年末单位从业人员', '第一产业从业人员比重', '第二产业从业人员比重',
        '第三产业从业人员比重', '第二产业采矿业年末单位从业人员', '第二产业制造业年末单位从业人员', '第二产业电力燃气及水的生产和供应业年末单位从业人员',
        '第二产业建筑业年末单位从业人员', '第三产业交通运输仓储和邮政业年末单位从业人员', '第三产业信息传输计算机服务和软件业年末单位从业人员',
        '第三产业批发和零售业年末单位从业人员', '第三产业住宿餐饮业年末单位从业人员', '第三产业金融业年末单位从业人员', '第三产业房地产业年末单位从业人员',
        '第三产业租赁和商业服务业年末单位从业人员', '第三产业科学研究技术服务和地质勘查业年末单位从业人员', '第三产业水利环境和公共设施管理业年末单位从业人员',
        '第三产业居民服务修理和其他服务业年末单位从业人员', '第三产业教育业年末单位从业人员', '第三产业卫生社会保障和社会福利业年末单位从业人员',
        '第三产业文化体育和娱乐业年末单位从业人员', '第三产业公共管理和社会组织年末单位从业人员', '行政区划土地面积', '建成区面积', '人口密度',
        '城市建设用地面积', '城市居住用地面积', '城市建设用地占市区面积比重', '地区生产总值', '人均地区生产总值', '地区生产总值增长率',
        '第一产业占GDP的比重', '第二产业占GDP的比重', '第三产业占GDP的比重', '地方财政一般预算内收入', '地方财政一般预算内支出', '地方财政一般预算内科学技术支出',
        '地方财政一般预算内教育支出', '年末金融机构各项存款余额', '年末金融机构居民储蓄存款余额', '年末金融机构各项贷款余额', '规模以上工业企业数',
        '规模以上内资企业数', '规模以上港澳台商投资企业数', '规模以上外商投资企业数', '规模以上工业总产值', '规模以上内资企业工业总产值',
        '规模以上港澳台商投资企业工业总产值', '规模以上外商投资企业工业总产值', '规模以上工业企业流动资产合计', '规模以上工业企业固定资产合计',
        '规模以上工业企业主营业务税金及附加', '规模以上工业企业本年应交增值税', '规模以上工业企业利润总额', '客运总量', '铁路旅客运量', '公路客运量',
        '民用航空客运量', '水运客运量', '货运总量', '铁路货物运量', '公路货运量', '民用航空货邮运量', '水运货运量', '年末邮政局数', '邮政业务收入', '电信业务收入',
        '固定电话年末用户数', '移动电话年末用户数', '互联网宽带接入用户数', '限额以上批发零售贸易业商品销售总额', '社会消费品零售总额', '限额以上批发零售贸易企业数',
        '外商直接投资合同项目', '当年实际使用外资金额', '固定资产投资', '房地产开发投资', '房地产住宅开发投资', '普通高等学校数', '中等职业教育学校数', '普通中学数',
        '普通高等学校专任教师数', '中等职业教育学校专任教师数', '普通中学专任教师数', '小学专任教师数', '普通高等学校在校学生数', '高中阶段在校学生数',
        '中等职业教育学校在校学生数', '普通中学在校学生数', '小学在校学生数', '成人高等学校在校学生数', '每万人在校大学生数', '每万人在校中等职业学生数',
        '剧场影剧院数', '公共图书馆图书总藏量', '每百人公共图书馆藏书', '医院卫生院数', '医院卫生院床位数', '医生数', '在岗职工平均人数', '在岗职工工资总额',
        '职工平均工资', '城镇基本养老保险参保人数', '城镇基本医疗保险参保人数', '失业保险参保人数', '城市维护建设资金支出', '年末实有城市道路面积', '排水管道长度',
        '供水总量', '居民生活用水量', '全社会用电量', '全社会工业用电', '全社会城乡居民生活用电', '供气总量', '家庭供气用量', '用气人口', '液化石油气供气总量',
        '液化石油气家庭用量', '用液化气人口', '年末实有公共汽车营运车辆数', '全年公共汽车客运总量', '年末实有出租汽车数', '每万人拥有公共汽车', '人均城市道路面积',
        '绿地面积', '公园绿地面积', '建成区绿化覆盖面积', '建成区绿化覆盖率', '工业废水排放量', '工业二氧化硫产生量', '工业二氧化硫排放量', '工业烟尘排放量',
        '工业烟尘去除量', '空气质量达标天数', '居住用地面积', '工业总产值', '工业从业人员年平均人数', '工业企业数', '内资企业数', '港澳台商投资企业数', '外商投资企业数',
        '规模以上工业企业销售税金及附加', '工业废水排放达标量', '工业二氧化硫去除量', '工业固体废物综合利用率', '城镇生活污水处理率', '生活垃圾无害化处理率', '人均绿地面积',
        '城市建设居住用地面积', '规模以上工业从业人员年平均人数', '非农业人口', '规模以上工业企业产品销售收入', '规模以上工业企业流动资产年平均余额',
        '规模以上工业企业固定资产净值年平均余额', '城镇生活消费用电', '年末耕地总资源', '人均占自耕地面积', '当年合同外资金额', '人均家庭生活用水量',
        '居民人均生活用电量', '地方财政一般预算内抚恤和社会福利救济支出', '地方财政一般预算内社会保障补助支出', '居民生活用电', '第二产业电力煤气及水的生产和供应业年末单位从业人员',
        '第三产业地质勘察水利管理业年末单位从业人员', '第三产业批发零售和餐饮业年末单位从业人员', '第三产业金融保险业年末单位从业人员', '第三产业社会服务业年末单位从业人员',
        '第三产业卫生体育福利业年末单位从业人员', '第三产业教育文艺广播影视业年末单位从业人员', '第三产业科研综合技术服务业年末单位从业人员', '第三产业机关和社会团体年末单位从业人员',
        '园林绿地面积', '一般工业固体废物综合利用率', '污水处理厂集中处理率', '生活垃圾无害处理率']
vars = ['第一产业占GDP的比重', '第二产业占GDP的比重', '第三产业占GDP的比重']

report_title = u'探索性区域分析报告(Version 1)'
report_author = u'冥王星人'
save_file = 'E:/Report/Region_Report_first_version.pdf'

def dataframe2list(dframe):
    dictdata = dframe.to_dict('split')
    result = dictdata['data']
    [result[i].insert(0,dictdata['index'][i]) for i in range(len(result))]
    title = [u'变量']
    title.extend(dictdata['columns'])
    result.insert(0,title)
    nrow = len(result)
    ncol = len(result[0])
    return {'data':result,'ncol':ncol,'nrow':nrow}

# 1. 报告的初始化
region_data = RegionData()
report = Report(title=report_title,author=report_author)
for i in range(len(vars)):
    var = vars[i]
    restvar = list(vars)
    del restvar[i]

    # 生成章节
    report.createSection(var)

    period = region_data.databases['citystatiscs'].period(var)
    for year in period:
        # 生成分支章节
        report.createSubSection(year)
        mdata = region_data.query(region=['t'],year=[year],variable=[var])
        mdata = mdata['data']
        invars = mdata.columns[1:]
        cse = CrossSectionRegionDataExplorer(mdata)
        tdata = cse.describe().applymap(lambda x:'{0:.2f}'.format(x))
        tdata = dataframe2list(tdata)
        print(var,year)
        report.addTable(tdata['data'],tdata['nrow'],tdata['ncol'])

report.flush()
report.generate_pdf(save_file)





























